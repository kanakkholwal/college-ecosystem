{
  "$schema": "node_modules/wrangler/config-schema.json",
  "main": ".open-next/worker.js",
  "name": "ce-platform",
  "compatibility_date": "2025-08-15",
  "compatibility_flags": [
    "nodejs_compat",
    "nodejs_compat_populate_process_env",
    "global_fetch_strictly_public",
  ],
  // Minification helps to keep the Worker bundle size down and improve start up time.
  "minify": true,
  "assets": {
    "binding": "ASSETS",
    "directory": ".open-next/assets"
  },
  "observability": {
    "enabled": true
  },
  /**
     * Smart Placement
     * Docs: https://developers.cloudflare.com/workers/configuration/smart-placement/#smart-placement
     */
  "placement": {
    "mode": "smart"
  },
  /**
     * Bindings
     * Bindings allow your Worker to interact with resources on the Cloudflare Developer Platform, including
     * databases, object storage, AI inference, real-time communication and more.
     * https://developers.cloudflare.com/workers/runtime-apis/bindings/
     */
  /**
     * Environment Variables
     * https://developers.cloudflare.com/workers/wrangler/configuration/#environment-variables
     */
  // "vars": {
  //   "EMAIL_FROM": "no-reply@notifications.nith.eu.org",
  //   "EMAIL_FROM_NAME": "College Platform",
  //   "EMAIL_REPLY_TO": "support@nith.eu.org"
  // },
  /**
     * Service Bindings (communicate between multiple Workers)
     * https://developers.cloudflare.com/workers/wrangler/configuration/#service-bindings
     */
  "services": [
    {
      "binding": "WORKER_SELF_REFERENCE",
      "service": "ce-platform"
    }
  ],
  "limits": {
    "cpu_ms": 300000, // default is 30000 (30 seconds)
  },
  "r2_buckets": [
    {
      "binding": "NEXT_INC_CACHE_R2_BUCKET",
      "bucket_name": "next-inc-cache"
    }
    // ,{
    //   "bucket_name": "next-inc-cache",
    //   "binding": "next_inc_cache"
    // }
  ],
  // "routes": [
  //   {
  //     "pattern": "mail.nith.eu.org",
  //     "custom_domain": true,
  //   },

  // ],
  "account_id": "${CLOUDFLARE_ACCOUNT_ID}",
  // Vars that will be injected into the worker
  
  "vars": {
    "GOOGLE_ID": "${GOOGLE_ID}",
    "GOOGLE_SECRET": "${GOOGLE_SECRET}",
    "MAIL_PASSWORD": "${MAIL_PASSWORD}",
    "BETTER_AUTH_URL": "${BETTER_AUTH_URL}",
    "SERVER_IDENTITY": "${SERVER_IDENTITY}",
    "NEXT_PUBLIC_SERVER_IDENTITY": "${NEXT_PUBLIC_SERVER_IDENTITY}",
    "DATABASE_URL": "${DATABASE_URL}",
    "NODE_ENV": "${NODE_ENV}",
    "MONGODB_URI": "${MONGODB_URI}",
    "REDIS_URL": "${REDIS_URL}",
    "GOOGLE_GENERATIVE_AI_API_KEY": "${GOOGLE_GENERATIVE_AI_API_KEY}",
    // frontend
    "NEXT_PUBLIC_ENV": "${NEXT_PUBLIC_ENV}",
    "NEXT_PUBLIC_BASE_URL": "${NEXT_PUBLIC_BASE_URL}",
    // backend
    "BASE_MAIL_SERVER_URL": "${BASE_MAIL_SERVER_URL}",
    "BASE_URL": "${BASE_URL}",
    "BASE_SERVER_URL": "${BASE_SERVER_URL}",
    "NEXT_PUBLIC_BASE_SERVER_URL": "${NEXT_PUBLIC_BASE_SERVER_URL}",
    // migrated to supabase
    "NEXT_PUBLIC_SUPABASE_URL": "${NEXT_PUBLIC_SUPABASE_URL}",
    "NEXT_PUBLIC_SUPABASE_ANON_KEY": "${NEXT_PUBLIC_SUPABASE_ANON_KEY}",
    // Adsense
    "NEXT_PUBLIC_ADSENSE_CLIENT_ID": "${NEXT_PUBLIC_ADSENSE_CLIENT_ID}"
  }
}